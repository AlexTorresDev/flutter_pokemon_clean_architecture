name: Android Release

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.10.2
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion }} > version.txt
      - name: Upload version.txt as artifact
        uses: actions/upload-artifact@v3
        with:
          name: gitversion
          path: version.txt

  build:
    name: Build Android
    needs: version
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Download version.txt
        uses: actions/download-artifact@v3
        with:
          name: gitversion
          path: version.txt
    #  - name: Read version from file
    #    id: version
    #    uses: juliangruber/read-file-action@v1
    #    with:
    #      path: version.txt
    #  - name: Update version in pubspec.yaml
    #    run: sed -i "s/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g" pubspec.yaml
      - name: Download keystore
        id: keystore
        uses: timheuer/base64-to-file@v1.2.3
        with:
          fileName: keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.5'
          channel: 'stable'
          cache: true
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build release Bundle
        run: flutter build appbundle --release

  deploy:
    name: Deploy Android
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Get Android build from artifact
        uses: actions/download-artifact@v3
        with:
          name: android-release
      - name: Release to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: dev.alextrs.flutter_pokemon_clean_architecture
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: production
        